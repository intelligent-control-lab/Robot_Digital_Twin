<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="namespace" default="/gp4_gazebo/"/>
  <arg name="launch_world" default="true"/>
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>

  <!-- the include to include other launch files  -->
  <group if="$(eval launch_world)">
    <include
      file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
    </include>
  </group>
  
  <group ns="$(arg namespace)">
    <arg name = "gp4_arm" default="gp4_arm_$(arg namespace)"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find robot_digital_twin)/urdf/gp4.xacro"/>
    <node name="spawn_gp4_arm" pkg="gazebo_ros" type="spawn_model" ns="$(arg namespace)"
      args="-param robot_description
            -urdf 
            -x $(arg x)
            -y $(arg y)
            -z $(arg z)
            -R $(arg roll)
            -P $(arg pitch)
            -Y $(arg yaw)
            -model $(arg gp4_arm)"
      respawn="false" output="screen">
    </node>


    <rosparam file="$(find robot_digital_twin)/launch/robot_control_6dof.yaml" command="load" ns="$(arg namespace)"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" ns="$(arg namespace)"
      output="screen" 
      args="joint_state_controller
            joint1_position_controller
            joint2_position_controller
            joint3_position_controller
            joint4_position_controller
            joint5_position_controller
            joint6_position_controller"
    />
  
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name = "robot_state_publisher" pkg = "robot_state_publisher" type = "robot_state_publisher" ns="$(arg namespace)"
      respawn="false" output="screen">
      <remap from="/joint_states" to="$(arg namespace)/joint_states" />
    </node>
  </group>

</launch>
